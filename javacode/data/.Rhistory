require(mosaic)
bwplot(Diffs ~ Group, data = sleep)
ObsMeanDiff <-diff(mean(Diffs ~ Group, data=sleep))
trials <- do(10000)*diff(mean(Diffs ~ shuffle(Group), data = sleep))
histogram(~trials$U)
tally(~U >= ObsMeanDiff, data = trials)
iris <- read.csv("~/Downloads/iris.csv")
View(iris)
library("mosaic", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
xyplot(y ~ x, data = name)
xyplot(y ~ x, data = name)
xyplot(sepallength ~ petallength, data = name)
xyplot(sepallength ~ petallength, data = iris)
qplot(petallength, sepallength, data=iris, colour=class)
model <- lm(sepallength ~ petallength + petalwidth, data = iris)
model <- lm(sepallength ~ petallength + petalwidth, data = iris)
plot(model)
plot(model)
summary(mod)
plot(model)
summary(mod)
summary(model)
plot(model)
histogram(~petallength, data = iris)
summary(iris)
favstats(iris)
favstats(petallength)
trials <-do(10000)*mean(~petallength, data=resample(iris))
library("mosaic", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
trials <-do(10000)*mean(~petallength, data=resample(iris))
trials <-do(10000)*mean(~petallength, data=resample(iris))
trials <- do(10000) * mean(~petallength, data=resample(iris))
import(iris)
iris <- read.csv("~/Downloads/iris.csv")
View(iris)
trials <- do(10000) * mean(~petallength, data=resample(iris))
trials <- do(10000) * mean(~petallength, data=resample(iris))
histogram(~result, data=trials)
favstats(trials)
summary(trials)
qdata(c(.05,.95), result, data=trials)
confint(trials, level = .90, method= "stderr")
with(iris, cor(sepallength, petallength))
trials <- do(10000)*with(resample(iris), cor(sepallength, petallength))
(trials, level = .95, method= "quantile ")
(trials , level = .95, method = "quantile ")
qdata(c(.05,.95), result, data=trials)
GaltonFamilies <- read.csv("~/Downloads/GaltonFamilies.csv")
View(GaltonFamilies)
require(mosaic)
Parents <- subset(galton, !duplicated(galton$family))
Parents <- subset(GaltonFamilies, !duplicated(galton$family))
Parents <- subset(galton, !duplicated(galton$family))
Parents <- subset(GaltonFamilies, !duplicated(GaltonFamilies$family))
qplot(mother, father, data=Parents)
rsquared(lm(father ~ mother,data=Parents)) t
rsquared(lm(father ~ mother,data=Parents))
trials = do(10000)*rsquared(lm(father ~ shuffle(mother), data=Parents))
qplot(result, data = trials)
favstats(result)
summary(result)
trials = do(10000)*rsquared(lm(father ~ shuffle(mother), data=Parents))
tally(~result >= .009389482, data = trials)
favstats(trials)
fit <- lm(father ~ mother, data = galton)
fit <- lm(father ~ mother, data = GaltonFamilies)
plot(fit)
plot(fit)
fit <- lm(father ~ mother, data = GaltonFamilies)
plot(fit)
plot(fit)
summary(fit)
GaltonFamilies <- read.csv("~/Downloads/GaltonFamilies.csv")
View(GaltonFamilies)
Donner <- read.csv("~/Downloads/Donner.csv")
View(Donner)
fit <- lm(gender ~ survived, data = Donner)
summary(age)
favstats(gender)
favstats(Donner)
mean(age)
average(age)
sd(gender data = Donner)
sd(gender)
Donnerdied <- read.csv("~/Desktop/Donnerdied.csv")
View(Donnerdied)
summary(Donnerdied)
favstats(Donnerdied)
summary(age)
favstats(agte)
favestats(age)
favstats(age)
favstats(Donnerdied)
sd(age)
sd(Donnerdied)
sd(Donnerdied~age)
sd(age,na.rm=TRUE)
sd(Donnerdied)
Donnerlived <- read.csv("~/Desktop/Donnerlived.csv")
View(Donnerlived)
sd(Donnerlived)
table1 <- xtabs(~gender + survived, data=Donner)
trials <- do(10000)* tally(~gender + shuffle(survived),data=Donner)["Female","Died"]
qplot(result,data=trials)
tally(~result,trials,format="prop")
plot(fit)
fit <- lm(father ~ mother, data = GaltonFamilies)
plot(fit)
trials2 <- do(10000)*diff(mean(age~ shuffle(survived),data=Donner))
qplot(Lived, data=trials2)
prop(~trials2 >= abs(obs))
prop(~trials2 >= abs(obs))
obs <- diff(mean(age~ survived,data=Donner))
prop(~trials2 >= abs(obs))
d
trials3 <- do(10000)* pval(prop.test(survived ~shuffle(gender),data=Donner))
qplot(p.value, data=trials3)
prop(~trials3 < 0.05)
tips <- read.csv("/var/folders/z6/jwrww7fs1397gcs55s18ysfr0000gp/T//RtmpsAFKAl/data312b367b4df1")
View(tips)
aggregate(tip~Sex, data=x, FUN=function(x) c(mean=mean(x)))
aggregate(tip~sex, data=tips, FUN=function(tips) c(mean=mean(tips)))
aggregate(tip~sex, data=tips, FUN=function(tips) c(mean=mean(tips)) sd = (favstats(tips)))
aggregate(tip~sex, data=tips, FUN=function(tips) c(mean=sd(tips)))
count=length(x)
aggregate(tip~sex, data=tips, FUN=function(tips) count=length(tips))
aggregate(tip~sex, data=tips, FUN=function(tips) c(mean=mean(tips)/mean(total_bill)))
tips$tippct = (tips$tip)/(tips$total_bill)
favstats(tippct~sex, data=tips)
favstats(tippct~sex, data=tips)
favstats(tippct~sex, data=tips)
library("mosaic", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
tips$tippct = (tips$tip)/(tips$total_bill)
t.test(tippct ~ sex, var.equal = TRUE, data=tips)
anova(pctsex.fit)
pctsex.fit <- aov(tippct ~ sex, data=tips)
anova(pctsex.fit)
linmod <- lm(tippct ~ sex, data=tips)
summary(linmod)
pctsex.fit <- aov(tippct ~ sex, data=tips)
pctsex.fit <- aov(tippct ~ day, data=tips)
anova(pctsex.fit)
fit <- lm(tippct ~ sex + smoker, data=tips)
plot(fit)
plot(fit)
summary(fit)
`22.24ShotClockStats` <- read.table("~/Documents/SENIOR YEAR/AP Stats/22-24ShotClockStats.csv", header=TRUE, quote="\"")
View(`22.24ShotClockStats`)
library("mosaic", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
favstats(22.24ShotClockStats)
`22_24` <- read.table("~/Documents/SENIOR YEAR/AP Stats/22_24.csv", header=TRUE, quote="\"")
View(`22_24`)
favstats(22.24ShotClockStats)
favstats(22_24)
favstats("22_24")
stats("22_24")
summary(22_24)
summary(Donner)
summary(Donner)
summary(22_24)
summary(iris)
supersuperearly <- read.table("~/Documents/SENIOR YEAR/AP Stats/supersuperearly.csv", header=TRUE, quote="\"")
View(supersuperearly)
summary(supersuperearly)
veryearly <- read.table("~/Documents/SENIOR YEAR/AP Stats/veryearly.csv", quote="\"")
View(veryearly)
summary(veryearly)
early <- read.table("~/Documents/SENIOR YEAR/AP Stats/early.csv", quote="\"")
View(early)
summary(early)
average <- read.table("~/Documents/SENIOR YEAR/ASR/average.csv", quote="\"")
View(average)
summary(average)
late <- read.table("~/Documents/SENIOR YEAR/ASR/late.csv", quote="\"")
View(late)
summary(late)
verylate <- read.table("~/Documents/SENIOR YEAR/AP Stats/verylate.csv", quote="\"")
View(verylate)
summary(verylate)
alldataregseason <- read.csv("~/Documents/SENIOR YEAR/AP Stats/alldataregseason.csv")
View(alldataregseason)
head(alldataregseason)
cor.test(alldataregseason$GP, alldataregseason$age)
cor.test(alldataregseason$FG., alldataregseason$age)
cor.test(alldataregseason$W, alldataregseason$L)
cor.test(alldataregseason$W, alldataregseason$MIN)
cor.test(alldataregseason$W, alldataregseason$age)
cor.test(alldataregseason$AGE, alldataregseason$L)
cor.test(alldataregseason$AGE, alldataregseason$GP)
cor.test(alldataregseason$AGE, alldataregseason$W)
cor.test(alldataregseason$AGE, alldataregseason$L)
cor.test(alldataregseason$AGE, alldataregseason$MIN)
cor.test(alldataregseason$AGE, alldataregseason$FGA)
cor.test(alldataregseason$AGE, alldataregseason$FGM)
cor.test(alldataregseason$AGE, alldataregseason$FG.)
cor.test(alldataregseason$AGE, alldataregseason$X3PM)
cor.test(alldataregseason$AGE, alldataregseasonX3PA)
cor.test(alldataregseason$AGE, alldataregseason$X3PA)
cor.test(alldataregseason$AGE, alldataregseason$X3P.)
cor.test(alldataregseason$AGE, alldataregseason$FTM)
cor.test(alldataregseason$AGE, alldataregseason$FTA)
cor.test(alldataregseason$AGE, alldataregseason$FT.)
cor.test(alldataregseason$AGE, alldataregseason$OREB)
cor.test(alldataregseason$AGE, alldataregseason$DREB)
cor.test(alldataregseason$AGE, alldataregseason$REB)
cor.test(alldataregseason$AGE, alldataregseason$AST)
cor.test(alldataregseason$AGE, alldataregseason$TOV)
cor.test(alldataregseason$AGE, alldataregseason$STL)
cor.test(alldataregseason$AGE, alldataregseason$BLK)
cor.test(alldataregseason$AGE, alldataregseason$PF)
cor.test(alldataregseason$AGE, alldataregseason$DD2)
cor.test(alldataregseason$AGE, alldataregseason$TD3)
cor.test(alldataregseason$AGE, alldataregseason$PTS)
cor.test(alldataregseason$AGE, alldataregseason$X...)
> cor.test(alldataregseason$AGE, alldataregseason$GP)
cor.test(alldataregseason$AGE, alldataregseason$GP)
cor.test(alldataregseason$AGE, alldataregseason$W)
with(AGE, cor(cbind(GP, X..., W)))
with(alldataregseason$AGE, cor(cbind(GP, X..., W))
d
d
with(alldataregseason$AGE, cor(cbind(alldataregseason$GP, alldataregseason$X..., alldataregseason$W))
d
plot(TOV~AGE)
plot(alldataregseason$TOV ~ alldataregseason$AGE)
lm(alldataregseason$AGE ~ alldataregseason$W)
summary(model)
lm(alldataregseason$AGE ~ alldataregseason$GP + alldataregseason$W + alldataregseason$X...)
model ->lm(alldataregseason$AGE ~ alldataregseason$GP + alldataregseason$W + alldataregseason$X...)
model <- lm(alldataregseason$AGE ~ alldataregseason$GP + alldataregseason$W + alldataregseason$X...)
plot(model)
plot model
plot(model)
plot(model)
summary(model)
library("mosaic", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
lm(alldataregseason$AGE,alldataregseason$W)
alldataregseason <- read.csv("~/Documents/SENIOR YEAR/AP Stats/alldataregseason.csv")
View(alldataregseason)
model <- lm(alldataregseason$AGE,alldataregseason$W)
lm(alldataregseason$AGE,alldataregseason$W)
summary(alldataregseason)
model<-lm(alldataregseason$AGE,alldataregseason$W)
model<-lm(alldataregseason$AGE~alldataregseason$W)
plot(model)
summary(model)
plot(model)
plot(alldataregseason$AGE~(alldataregseason$W+alldataregseason$GP+alldataregseason$X...))
plot(alldataregseason$AGE~(alldataregseason$W+alldataregseason$GP+alldataregseason$X...))
plot(alldataregseason$AGE~alldataregseason$W+alldataregseason$GP+alldataregseason$X...)
lm(alldataregseason$AGE~alldataregseason$W+alldataregseason$GP+alldataregseason$X...)
plot(lm(alldataregseason$AGE~alldataregseason$W+alldataregseason$GP+alldataregseason$X...)
)
plot(lm(alldataregseason$AGE~alldataregseason$W+alldataregseason$GP+alldataregseason$X...)
)
mod<-lm(alldataregseason$AGE ~ alldataregseason$W+alldataregseason$GP+alldataregseason$X...))
mod<-lm(alldataregseason$AGE ~ alldataregseason$W+alldataregseason$GP+alldataregseason$X...)
plot(mod)
require(mosaic)
require(mosaic)
DataForSeniorProject <- read.csv("~/Documents/SENIOR YEAR/AP Stats/DataForSeniorProject.csv")
View(DataForSeniorProject)
model <- lm( Vertical..in.
~ X..of.Length.of.Achilles.over.height, data = DataForSeniorProject)
plot(model)
summary(model)
DataForSeniorProjectGirls <- read.csv("~/Documents/SENIOR YEAR/AP Stats/DataForSeniorProjectGirls.csv")
View(DataForSeniorProjectGirls)
model <- lm( Vertical..in.
+ ~ X..of.Length.of.Achilles.over.height, data = DataForSeniorProject)
model <- lm( Vertical..in.
+ ~ X..of.Length.of.Achilles.over.height, data = DataForSeniorProjectGirls)
model <- lm(Vertical..in. ~ X..of.Length.of.Achilles.over.height, data = DataForSeniorProjectGirls)
plot(model)
summary(model)
plot(Vertical..in. ~ X..of.Length.of.Achilles.over.height, data = DataForSeniorProjectGirls)
DataForSeniorProject <- read.csv("~/Documents/SENIOR YEAR/AP Stats/DataForSeniorProject.csv")
View(DataForSeniorProject)
model <- lm(Vertical..in. ~ X..of.Length.of.Achilles.over.height, data = DataForSeniorProject)
plot(Vertical..in. ~ X..of.Length.of.Achilles.over.height, data = DataForSeniorProject)
install.packages("rJava",,"http://rforge.net")
install.packages("rJava")
# cran got 7.1
packageurl <- "http://cran.r-project.org/bin/macosx/mavericks/contrib/3.1/fields_7.1.tgz"
# your mirror got 6.9.1
packageurl <- "http://cran.ma.imperial.ac.uk/bin/macosx/mavericks/contrib/3.1/fields_6.9.1.tgz"
library(devtools)
install_url(packageurl)
packageurl <- "http://cran.r-project.org/bin/macosx/mavericks/contrib/3.1/fields_7.1.tgz"
packageurl <- "http://cran.ma.imperial.ac.uk/bin/macosx/mavericks/contrib/3.1/fields_6.9.1.tgz"
library(devtools)
apt-get install r-cran-rjava
install.packages("rJava")
./configure
make
system.file("jri",package="rJava")
library("rjava")
library("rJava")
install.packages("rJava")
library("rjava")
install.packages("rJava")
library("rJava")
cat $R_HOME
Sys.getenv("R_HOME")
R RHOME
import os
export R_HOME=$(which R)
R_HOME
export R_HOME=$(which R)
Sys.getenv("R_HOME")
Sys.getenv("R_HOME")
1o
10
install.packages("caret")
install.packages(“RSQLite”)
install.packages(“RSQLite”)
install.packages("RSQLite")
library(caret)
library(RSQLite)
cwd
cdw()
cwd()
con = dbConnect(drv="SQLite", dbname="~/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/watson.sqlite3")
cd()
wd()
cwd()
con = dbConnect(drv="SQLite", dbname="Users/Paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/watson.sqlite3")
install.packages{DBI}
install.packages{"DBI"}
install.packages("DBI")
install.package("DBI")
install.packages("DBI")
install.packages("DBI")
?`dbConnect,SQLiteDriver-method`
con <- dbConnect(RSQLite::SQLite(), ":memory:")
con = dbConnect(drv="SQLite", dbname="Users/Paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/watson.sqlite3")
data(USArrests)
dbWriteTable(con, "USArrests", USArrests)
dbListTables(con)
dbGetQuery(con, "SELECT * FROM USArrests")
View(USArrests)
USArrests
con <- dbConnect(RSQLite::SQLite(), ":memory:")
con = dbConnect(drv="SQLite", dbname="Users/Paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/watson.sqlite3")
con = dbConnect(drv="SQLite", dbname="Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/watson.sqlite3")
getwd()
setwd(Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data)
con = dbConnect(drv="SQLite", dbname="/Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/watson.sqlite3")
setwd(/Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data)
setwd("/Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data")
getwd()
read.csv("watsonKey.csv")
read.csv("/watsonKey.csv")
read.csv("/Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/watsonKey.csv")
dat = read.csv("/Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/watsonKey.csv")
View(dat)
View(dat)
dat2 = read.csv("/watsonKey.csv")
dat2 = read.csv("watsonKey.csv")
dat2 = read.csv("/Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/watsonKey.csv")
system("ls *.db", show=TRUE)
sqlite    <- dbDriver("SQLite")
exampledb <- dbConnect(sqlite,"watson.sqlite3")
dbListTables(exampledb)
dbGetQuery(exampledb, "select * from main")
dbGetQuery(exampledb, "SELECT * FROM main")
exampledb <- dbConnect(sqlite,"/Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/watson.sqlite3")
dbListTables(exampledb)
dbGetQuery(exampledb, "SELECT * FROM main")
dbGetQuery(exampledb, "SELECT * FROM watson")
results <- dbSendQuery(exampledb, "SELECT * FROM watson")
fetch(results,10)
fetch(results,2)
fetch(results,10)
results <- dbSendQuery(exampledb, "SELECT * FROM watson")
fetch(results,10)
con = dbConnect(drv="SQLite", dbname="/Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/preprocess/main.sqlite3")
system("ls *.db", show=TRUE)
sqlite    <- dbDriver("SQLite")
exampledb <- dbConnect(sqlite,"/Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/preprocess/main.sqlite3")
dbListTables(exampledb)
dbListTables(exampledb)
dbGetQuery(exampledb, "SELECT * FROM main")
results <- dbSendQuery(exampledb, "SELECT * FROM main")
fetch(results,10)
data = fetch(results,10)
View(data)
data = fetch(results,-1)
View(data)
control <- trainControl(method="cv", number=10, classProbs=TRUE, summaryFunction=twoClassSummary)
data = data[ , !1]
data = fetch(results,-1)
results <- dbSendQuery(exampledb, "SELECT * FROM main")
data = fetch(results,-1)
data$real = as.factor(data$real)
data = data[ , 2:12]
model = train(real ~ ., data=data, method = 'glm', metric="ROC", trControl=control)
data[1,]
data = rbind(data,data.frame(1, 2, 3, 4, 5, 6, "food and drink", "food", "baked goods",0.1,1))
data.frame(1, 2, 3, 4, 5, 6, "food and drink", "food", "baked goods",0.1,1)
data2 = rbind(data,data.frame(1, 2, 3, 4, 5, 6, "food and drink", "food", "baked goods",0.1,1))
add1 = data.frame(1, 2, 3, 4, 5, 6, "food and drink", "food", "baked goods",0.1,1)
colnames(add1) = colnames(data)
View(add1)
data2 = rbind(data,add1)
View(data2)
data = fetch(results,-1)
data = data[ , 2:12]
add1 = data.frame(1, 2, 3, 4, 5, 6, "food and drink", "food", "baked goods",0.1,1)
colnames(add1) = colnames(data)
data2 = rbind(data,add1)
results <- dbSendQuery(exampledb, "SELECT * FROM main")
data = fetch(results,-1)
data = data[ , 2:12]
add1 = data.frame(1, 2, 3, 4, 5, 6, "food and drink", "food", "baked goods",0.1,1)
colnames(add1) = colnames(data)
data2 = rbind(data,add1)
results <- dbSendQuery(exampledb, "SELECT * FROM main")
data = fetch(results,-1)
data = data[ , 2:12]
add1 = data.frame(1, 2, 3, 4, 5, 6, "food and drink", "food", "baked goods",0.1,1)
colnames(add1) = colnames(data)
data = rbind(data,add1)
data$real = as.factor(data$real)
control <- trainControl(method="cv", number=10, classProbs=TRUE, summaryFunction=twoClassSummary)
model = train(real ~ ., data=data, method = 'glm', metric="ROC", trControl=control)
View(data2)
results <- dbSendQuery(exampledb, "SELECT * FROM main")
data = fetch(results,-1)
data = data[ , 2:12]
add1 = data.frame(1, 2, 3, 4, 5, 6, "food and drink", "food", "baked goods",0.1,1)
colnames(add1) = colnames(data)
data = rbind(data,add1)
data$real = as.factor(data$real)
data$c1l1 = as.factor(data$c1l1)
View(data)
data$c1l2 = as.factor(data$c1l2)
data$c1l3 = as.factor(data$c1l3)
control <- trainControl(method="cv", number=10, classProbs=TRUE, summaryFunction=twoClassSummary)
model = train(real ~ ., data=data, method = 'glm', metric="ROC", trControl=control)
View(data)
model = train(real ~ ., data=data, method = 'glm', metric="ROC", trControl=control,na.action = na.pass)
?make.names
data$real = make.names(data$real)
model = train(real ~ ., data=data, method = 'glm', metric="ROC", trControl=control,na.action = na.pass)
summary(model)
model
system("ls *.db", show=TRUE)
sqlite    <- dbDriver("SQLite")
exampledb <- dbConnect(sqlite,"/Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/preprocess/main.sqlite3")
dbListTables(exampledb)
dbGetQuery(exampledb, "SELECT * FROM main")
results <- dbSendQuery(exampledb, "SELECT * FROM main")
data = fetch(results,-1)
data = data[ , 2:12]
View(data)
data$real = as.factor(data$real)
data$real = make.names(data$real)
data$c1l1 = as.factor(data$c1l1)
data$c1l2 = as.factor(data$c1l2)
data$c1l3 = as.factor(data$c1l3)
control <- trainControl(method="cv", number=10, classProbs=TRUE, summaryFunction=twoClassSummary)
model = train(real ~ ., data=data, method = 'glm', metric="ROC", trControl=control,na.action = na.pass)
model
summary(model)
model
print(model)
model = train(real ~ ., data=data, method = 'glm', metric="accuracy", trControl=control,na.action = na.pass)
model
glm(real ~ ., data=data)
View(data)
glm(real ~ anger + joy + sadness, data=data)
?glm
glm(real ~ ., data=data, family = "binomial")
results <- dbSendQuery(exampledb, "SELECT * FROM main")
data2 = fetch(results,-1)
data2 = data[ , 2:12]
data2 = data2[ , 2:12]
glm(real ~ ., data=data2, family = "binomial")
mod = glm(real ~ ., data=data2, family = "binomial")
summary(mod)
predictions <- predict(model, newdata = data)
predictions
confusionMatrix(data=data$real,
reference=predictions)
confusionMatrix(data=na.omit(data)[11],
reference=predictions)
model
?predict
predictions <- predict(model, newdata = data, type = "probability")
predictions
predictions <- predict(model, newdata = data, type = "response")
predictions
predictions <- predict(model, newdata = data, type = "response")
predictions <- predict(model, newdata = data, type = "prob")
View(predictions)
saveRDS(model, "model.rds")
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(RSQLite)
model <- readRDS("model.rds")
model2 <- readRDS("/Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/preprocess/model.rds")
saveRDS(model, "model.rds")
model
saveRDS(model, "model.rds")
model2 <- readRDS("/Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/preprocess/model.rds")
model2 <- readRDS("/Users/paul2/Desktop/cs0320/term-project-as300-dthuku-jryoo-ptouma-sbelete/java code/data/rscripts/model.rds")
predictions <- predict(model, newdata = data, type = "prob")
View(predictions)
write.csv(predictions,"prediction.csv")
predictions <- predict(model, newdata = data, type = "prob")
predictions <- predict(model, newdata = data, type = "prob")
